{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {

        "baseClusterName": {
            "type": "string",
            "metadata": {
                "description": "The base name used to create resources; spark-basename, hbase-basename, basename-vnet, basenamestore, basename-dashboard."
            }
        },
        "clusterLoginUserName": {
            "type": "string",
            "defaultValue": "admin",
            "metadata": {
                "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
            }
        },
        "clusterLoginPassword": {
            "type": "securestring",
			"minLength": 10,
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "sshUserName": {
            "type": "string",
            "defaultValue": "sshuser",
            "metadata": {
                "description": "These credentials can be used to remotely access the cluster."
            }
        },
        "sshPassword": {
            "type": "securestring",
			"minLength": 10,
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "West US 2",
            "metadata": {

                "description": "The location for the resource group, vnet, storage accounts and the clusters."
            }
        },
        "openTsdbVersion": {
          "type": "string",
          "defaultValue": "2.3.0",
          "allowedValues": [
            "2.2.0",
            "2.3.0"
          ]
        },
        "openTsdbTopology": {
          "type": "string",
          "defaultValue": "Load Balanced",
          "allowedValues": [
            "Edge Node",
            "Load Balanced"
          ],
          "metadata": {
            "description": "Select the deployment topology for OpenTSDB on the cluster. 'Edge Node' installs 1 TSD instance on the edge node. 'Load Balanced' installs a TSD instance of every region server in the cluster and a load balancer on the edge node distributes traffic."
          }
        },
        "edgeNodeSize": {
          "type": "string",
          "metadata": {
            "description": "Size of the edge node that hosts the application"
          },
          "defaultValue": "Standard_D3_V2",
          "allowedValues": [
            "Standard_A1",
            "Standard_A2",
            "Standard_A3",
            "Standard_A4",
            "Standard_D1_V2",
            "Standard_D2_V2",
            "Standard_D3_V2",
            "Standard_D4_V2"
          ]
        },
        "tsdPortNumber": {
          "type": "int",
          "defaultValue": 4242,
          "metadata": {
            "description": "The port number that the TSD services should listen to requests on."
          }
        }
    },
  "variables": {
    "defaultApiVersion": "2015-05-01-preview",
    "clusterApiVersion": "2015-03-01-preview",
    "clusterWorkerNodeCount": "4",
    "clusterVNetName": "[concat(parameters('baseClusterName'),'-vnet')]",
    "clusterStorageAccountName": "[concat(parameters('baseClusterName'),'store')]",
    "hbaseClusterName": "[concat('hbase-', parameters('baseClusterName'))]",
    "sparkClusterName": "[concat('spark-', parameters('baseClusterName'))]",
    "clusterVNetAddressSpace": "10.0.0.0/16",
    "clusterVNetSubnetName": "default",
    "clusterVNetSubnetAddressRange": "10.0.0.0/24",
    "applicationName": "opentsdb",
    "galleryPackageIdentity": "opentsdb",
    "edgeNodeSuffix": "tdb",
    "scriptBaseUri": "https://raw.githubusercontent.com/hdinsight/Iaas-Applications/master/Scripts/",
    "templateBaseUri": "[concat(variables('scriptBaseUri'), 'Templates/')]",
    "appInfoBaseUri": "https://raw.githubusercontent.com/hdinsight/Iaas-Applications/master/OpenTSDB/",
    "edgeNodeSignatureTag": "opentsdb-edgenode-signature-tag",
    "topologies": {
      "Edge Node": {
        "OPENTSDB_TSD": ["edge"],
        "OPENTSDB_PROXY": []
      },
      "Load Balanced": {
        "OPENTSDB_TSD": ["region"],
        "OPENTSDB_PROXY": ["edge"]
      }
    },
    "selectedTopology": "[variables('topologies')[parameters('openTsdbTopology')]]",
    "extraConfiguration": {
      "opentsdb-site": {
        "tsd.network.port": "[parameters('tsdPortNumber')]",
        "opentsdb.opentsdb_version": "[parameters('openTsdbVersion')]"
      }
    },
    "singleQuote": "'"
  },
  "resources": [
    {
      "name": "[variables('clusterVNetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
      "apiVersion": "[variables('defaultApiVersion')]",
      "dependsOn": [ ],
      "tags": { },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('clusterVNetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('clusterVNetSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('clusterVNetSubnetAddressRange')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('clusterStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('location')]",
      "apiVersion": "[variables('defaultApiVersion')]",
      "dependsOn": [ ],
      "tags": { },
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "name": "[variables('hbaseClusterName')]",
      "type": "Microsoft.HDInsight/clusters",
      "location": "[parameters('location')]",
      "apiVersion": "[variables('clusterApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('clusterStorageAccountName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',variables('clusterVNetName'))]"
      ],
      "tags": { },
      "properties": {

        "clusterVersion": "3.6",
        "osType": "Linux",
        "clusterDefinition": {
          "kind": "hbase",
          "configurations": {
            "gateway": {
              "restAuthCredential.isEnabled": true,
              "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
              "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
            }
          }
        },
        "storageProfile": {
          "storageaccounts": [
            {
              "name": "[concat(variables('clusterStorageAccountName'),'.blob.core.windows.net')]",
              "isDefault": true,
              "container": "[variables('hbaseClusterName')]",
              "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('clusterStorageAccountName')), variables('defaultApiVersion')).key1]"
            }
          ]
        },
        "computeProfile": {
          "roles": [
            {
              "name": "headnode",
              "targetInstanceCount": "2",
              "hardwareProfile": {

                "vmSize": "Large"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', variables('clusterVNetSubnetName'))]"
              },
              "scriptActions": [
                {
                  "name": "install-opentsdb",
                  "uri": "[concat(variables('scriptBaseUri'), 'install_ambari_app_bootstrap.sh')]",
                  "parameters": "[concat(variables('scriptBaseUri'), ' -c ', variables('appInfoBaseUri'), 'config/opentsdb-service-config.json', ' -u ', parameters('clusterLoginUserName'), ' -p ', parameters('clusterLoginPassword'), ' --component-topologies ', variables('singleQuote'), string(variables('selectedTopology')), variables('singleQuote'), ' -x ', variables('singleQuote'), string(variables('extraConfiguration')), variables('singleQuote'), ' -s ', variables('edgeNodeSuffix'), ' -n ', variables('edgeNodeSignatureTag'), ' -z ', variables('templateBaseUri'), ' -e 1 -v DEBUG')]",
                  "isHeadNode": true
                }
              ]
            },
            {
              "name": "workernode",
              "targetInstanceCount": "[variables('clusterWorkerNodeCount')]",
              "hardwareProfile": {

                "vmSize": "Large"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', variables('clusterVNetSubnetName'))]"
              }
            },
            {
              "name": "zookeepernode",
              "targetInstanceCount": "3",
              "hardwareProfile": {
                "vmSize": "Medium"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', variables('clusterVNetSubnetName'))]"
              }
            }
          ]
        }
      }
    },
    {
      "name": "[variables('sparkClusterName')]",
      "type": "Microsoft.HDInsight/clusters",
      "location": "[parameters('location')]",
      "apiVersion": "[variables('clusterApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('clusterStorageAccountName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',variables('clusterVNetName'))]"
      ],
      "tags": { },
      "properties": {
        "clusterVersion": "3.6",
        "osType": "Linux",
        "clusterDefinition": {
          "kind": "spark",
          "configurations": {
            "gateway": {
              "restAuthCredential.isEnabled": true,
              "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
              "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
            }
          }
        },
        "storageProfile": {
          "storageaccounts": [
            {
              "name": "[concat(variables('clusterStorageAccountName'),'.blob.core.windows.net')]",
              "isDefault": true,
              "container": "[variables('sparkClusterName')]",
              "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('clusterStorageAccountName')), variables('defaultApiVersion')).key1]"
            }
          ]
        },
        "computeProfile": {
          "roles": [
            {
              "name": "headnode",
              "targetInstanceCount": "2",
              "hardwareProfile": {
                "vmSize": "Standard_D3"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', variables('clusterVNetSubnetName'))]"
              }
            },
            {
              "name": "workernode",
              "targetInstanceCount": "[variables('clusterWorkerNodeCount')]",
              "hardwareProfile": {
                "vmSize": "Standard_D3"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', variables('clusterVNetSubnetName'))]"
              }
            }
          ]
        }
      }
    },
    {
      "name": "[concat(variables('hbaseClusterName'),'/', variables('applicationName'))]",
      "type": "Microsoft.HDInsight/clusters/applications",
      "dependsOn": [
        "[concat('Microsoft.HDInsight/clusters/', variables('hbaseClusterName'))]"
      ],
      "apiVersion": "[variables('clusterApiVersion')]",
      "properties": {
        "marketPlaceIdentifier": "[variables('galleryPackageIdentity')]",
        "computeProfile": {
          "roles": [
            {
              "name": "edgenode",
              "targetInstanceCount": 1,
              "hardwareProfile": {
                "vmSize": "[parameters('edgeNodeSize')]"
              }
            }
          ]
        },
        "installScriptActions": [
          {
            "name": "install-opentsdb-proxy",
            "uri": "[concat(variables('scriptBaseUri'), 'install-edgenode-placeholder.sh')]",
            "parameters": "[concat(parameters('clusterLoginUserName'), ' ', parameters('clusterLoginPassword'), ' ', variables('edgeNodeSignatureTag'))]",
            "roles": [
              "edgenode"
            ]
          }
        ],
        "uninstallScriptActions": [],
        "httpsEndpoints": [
          {
            "subDomainSuffix": "[variables('edgeNodeSuffix')]",
            "destinationPort": "[parameters('tsdPortNumber')]",
            "accessModes": [
              "webpage"
            ]
          }
        ],
        "applicationType": "CustomApplication"
      }
    }
  ],
    "outputs": {

        "vnet": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks',variables('clusterVNetName')))]"
        },
        "hbaseCluster": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.HDInsight/clusters',variables('hbaseClusterName')))]"
        },
        "sparkCluster": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.HDInsight/clusters',variables('sparkClusterName')))]"
        }
    }
}